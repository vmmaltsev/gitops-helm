apiVersion: apps/v1
kind: Deployment
metadata:
  name: client-react
  labels:
    app: client-react
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: client-react
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: client-react
    spec:
      containers:
        - name: client-react
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.port }}
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.port }}
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.port }}
            initialDelaySeconds: 20
            periodSeconds: 10
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu | default "50m" }}
              memory: {{ .Values.resources.requests.memory | default "64Mi" }}
            limits:
              cpu: {{ .Values.resources.limits.cpu | default "100m" }}
              memory: {{ .Values.resources.limits.memory | default "128Mi" }}
